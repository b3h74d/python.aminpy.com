[h2][h2/]
فصل اول: متغیرها، عبارات و جمله ها
[/h2]

[h3][h3/]
مقادیر و نوع ها
[/h3]

[p][p/]
مقدار (value) یکی از چیز های پایه می باشد که یک برنامه با آن سر و کار دارد، مانند 
یک حرف یا یک عدد. 
[/p]

[p][p/]
این مقادیر متعلق به نوع های مختلفی می باشد: عدد 2 یک integer می باشد، و 'Hello, World!' یک رشته، زیرا رشته ای از حروف می باشد.
شما (و مفسر) می توانید رشته ها را تشخیص دهید چرا رشته ها درون علامت کتیشن قرار می گیرند.
[/p]

[p][p/]
در صورتی که نوع یک مقدار را نمی دانید مفسر می تواند به شما نوع آن مقدار را نشان دهد.
[/p]

[code]
>>> type('Hello, World!')
<type 'str'>
>>> type(17)
<type 'int'>
[/code]

[p][p/]
موضوع عجیبی نیست، رشته ها متعلق به نوع str و اعداد متعلق به نوع int می باشند.
بدیهی است که اعداد اعشاری متعلق به نوع float می باشند. چرا که این اعداد در قالب اعشاری نمایش داده می شوند.
[/p]

[code]
>>> type(3.2)
<type 'float'>
[/code]

[p][p/]
گاهی اوقات مقادیر به شکل '17' و یا '3.2' نمایش داده می شوند، تکلیف این مقادیر چه می شود؟
این مقادیر شبیه به اعداد هستند، ولی درون علامت کتیشن قرار گرفته اند مانند رشته ها.
[/p]

[code]
>>> type('17')
<type 'str'>
>>> type('3.2')
<type 'str'>
[/code]

[p][p/]
نوع این نوع مقادیر نیز رشته می باشد.
[/p]

[p][p/]
زمانی که می خواهید یک عدد طولانی را تایپ کنید، ممکن است بخواهید بین آن رقم سه رقم از 
کاما استفاده کنید، مانند 1,000,000. این یک نوع integer قانونی در پایتون به شمار نمی آید، 
ولی موردی نخواهد داشت:
[/p]

[code]
>>> 1,000,000
(1, 0, 0)
[/code]

[p][p/]
خوب، خروجی فوق به هیچ وجه چیزی نیست که ما انتظار داشتیم! پایتون 1,000,000 را ترتیبی از integer های جدا شده توسط کاما تفسیر می کند. 
این اولین مثال خطای معنایی است که مشاهده کردیم: کد بدون تولید هیج پیام خطایی اجرا می شود، 
ولی کاری درست را انجام نی دهد.
[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

[p][p/]

[/p]

